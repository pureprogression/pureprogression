/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –ø–æ—Å—Ç–µ—Ä–æ–≤ –≤ WebP –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
 * WebP –Ω–∞ 25-50% –º–µ–Ω—å—à–µ —á–µ–º JPG –ø—Ä–∏ —Ç–æ–º –∂–µ –∫–∞—á–µ—Å—Ç–≤–µ
 */

const fs = require('fs');
const path = require('path');

// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: npm install sharp
const sharp = require('sharp');

async function convertPostersToWebP() {
  const postersDir = './public/posters';
  const files = fs.readdirSync(postersDir);
  
  console.log('üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç–µ—Ä—ã –≤ WebP...');
  
  for (const file of files) {
    if (file.endsWith('.jpg')) {
      const inputPath = path.join(postersDir, file);
      const outputPath = path.join(postersDir, file.replace('.jpg', '.webp'));
      
      try {
        await sharp(inputPath)
          .webp({ 
            quality: 85, // –ö–∞—á–µ—Å—Ç–≤–æ 85% - –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
            effort: 6    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Å–∂–∞—Ç–∏–µ
          })
          .toFile(outputPath);
          
        // –°—Ä–∞–≤–Ω–∏–º —Ä–∞–∑–º–µ—Ä—ã
        const originalSize = fs.statSync(inputPath).size;
        const webpSize = fs.statSync(outputPath).size;
        const saved = ((originalSize - webpSize) / originalSize * 100).toFixed(1);
        
        console.log(`‚úÖ ${file}: ${(originalSize/1024).toFixed(1)}KB ‚Üí ${(webpSize/1024).toFixed(1)}KB (${saved}% —ç–∫–æ–Ω–æ–º–∏–∏)`);
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ ${file}:`, error.message);
      }
    }
  }
  
  console.log('üéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

// –ó–∞–ø—É—Å–∫: node convert-posters-to-webp.js
convertPostersToWebP().catch(console.error);

