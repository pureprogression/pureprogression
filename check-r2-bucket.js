/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ R2 bucket –∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
 * –ó–∞–ø—É—Å–∫: node check-r2-bucket.js
 */

const https = require('https');

const R2_BUCKET = "pub-24028780ba564e299106a5335d66f54c.r2.dev";
const TEST_FILES = [
  '/videos/webHero.mp4',
  '/videos/x92.mp4',
  '/posters/webHero.jpg',
  '/posters/x92.jpg'
];

function checkFile(url) {
  return new Promise((resolve, reject) => {
    const req = https.get(url, (res) => {
      resolve({
        url,
        status: res.statusCode,
        contentType: res.headers['content-type'],
        contentLength: res.headers['content-length'],
        accessible: res.statusCode === 200
      });
    });
    
    req.on('error', (error) => {
      resolve({
        url,
        status: 'ERROR',
        error: error.message,
        accessible: false
      });
    });
    
    req.setTimeout(5000, () => {
      req.destroy();
      resolve({
        url,
        status: 'TIMEOUT',
        error: 'Request timeout',
        accessible: false
      });
    });
  });
}

async function checkR2Bucket() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ R2 bucket...\n');
  console.log(`üì¶ Bucket: ${R2_BUCKET}\n`);
  
  const results = [];
  
  for (const file of TEST_FILES) {
    const url = `https://${R2_BUCKET}${file}`;
    console.log(`üìÅ –ü—Ä–æ–≤–µ—Ä—è—é: ${file}`);
    
    const result = await checkFile(url);
    results.push(result);
    
    if (result.accessible) {
      const size = result.contentLength ? (parseInt(result.contentLength) / 1024 / 1024).toFixed(2) + 'MB' : 'unknown';
      console.log(`   ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω (${result.status}) - ${size}`);
    } else {
      console.log(`   ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω (${result.status}) - ${result.error || 'Unknown error'}`);
    }
    console.log();
  }
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const accessible = results.filter(r => r.accessible).length;
  const total = results.length;
  
  console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${accessible}/${total} —Ñ–∞–π–ª–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã`);
  
  if (accessible === total) {
    console.log('üéâ R2 bucket –ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ—Å—Ç—É–ø–µ–Ω!');
    console.log('‚úÖ –ì–æ—Ç–æ–≤ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CDN');
  } else if (accessible > 0) {
    console.log('‚ö†Ô∏è  R2 bucket —á–∞—Å—Ç–∏—á–Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞');
  } else {
    console.log('‚ùå R2 bucket –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('üí° –ù—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø –≤ Cloudflare Dashboard');
  }
  
  console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –ó–∞–π—Ç–∏ –≤ Cloudflare Dashboard ‚Üí R2 Object Storage');
  console.log('2. –í—ã–±—Ä–∞—Ç—å bucket –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å Public Access');
  console.log('3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Custom Domain –¥–ª—è CDN');
}

checkR2Bucket().catch(console.error);


